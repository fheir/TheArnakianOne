{"version":3,"sources":["images/back_right.png","images/back_left.png","images/basic_front_1.png","images/basic_front_2.png","images/basic_front_3.png","images/basic_front_4.png","images/basic_front_5.png","images/green_front_1.png","images/green_front_2.png","images/green_front_3.png","images/green_front_4.png","images/green_front_5.png","images/red_front_1.png","images/red_front_2.png","images/red_front_3.png","images/red_front_4.png","images/red_front_5.png","images/purple_front_1.png","images/purple_front_2.png","images/purple_front_3.png","images/purple_front_4.png","images/purple_front_5.png","images/objective_front_1.png","images/objective_front_2.png","images/objective_front_3.png","images/objective_front_4.png","images/objective_front_5.png","images/objective_back.png","App.js","reportWebVitals.js","index.js"],"names":["BasicCards","id","front","basicFront1","back","backRight","basicFront2","backLeft","basicFront3","basicFront4","basicFront5","GreenCards","greenFront1","difficulty","greenFront2","greenFront3","greenFront4","greenFront5","RedCards","redFront1","redFront2","redFront3","redFront4","redFront5","PurpleCards","purpleFront1","purpleFront2","purpleFront3","purpleFront4","purpleFront5","ObjectiveCards","objective1","objective2","objective3","objective4","objective5","App","document","title","className","Typography","align","variant","React","Component","shuffle","a","j","x","i","length","Math","floor","random","_slicedToArray","arr","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","err","sliceIterator","TypeError","GameController","props","state","selectedDeck","cardsInDeck","cardsInDiscard","numberOfObjectives","selectedObjectives","deviceOrientation","hasRedrawn","roundNumber","changedOrientation","bind","onDifficultySelected","onRedrawSelected","orientation","angle","window","abs","screen","_window$screen$orient","type","split","_window$screen$orient2","console","log","this","setState","addEventListener","warn","selectedDifficulty","greenCards","redCards","purpleCards","numObjectives","objectivesOn","selectedCards","drawPile","slice","selectDifficultyCards","concat","tempObjectives","selectObjectiveCards","cardTypes","greenCount","redCount","purpleCount","green","red","purple","count","randomGreenIndex","selectedCard","splice","selectedId","filter","e","randomRedIndex","randomPurpleIndex","cardIndex","currentObjectivesId","map","element","unselected","includes","randomIndex","newSelectedObjectives","newDiscard","newRoundNumber","difficultyComponent","drawComponent","objectivesComponent","selectingDifficulty","selectedObjNameAddition","drawOrientationName","onClick","cards","discard","name","canDraw","drawIndex","discardIndex","handleDrawCard","round","playerHasRedrawn","cardsDrawnByRival","onRedrawObjective","orientationName","theme","createMuiTheme","typography","subtitle1","fontSize","GreenSlider","withStyles","root","color","height","marginBottom","Slider","RedSlider","PurpleSlider","DifficultyController","difficultyText","toggleObjectives","slider","toggleState","currentSliderValue","availableSpace","sliderMarks","label","gutterBottom","ThemeProvider","defaultValue","aria-labelledby","valueLabelDisplay","marks","getMarksForSlider","step","min","max","onChange","friendlyDifficultyString","onChangeCommitted","FormControlLabel","control","Checkbox","checked","disabled","Button","hasSelectedFiveCards","DrawPile","discardPile","tiebreaker","deckDescription","drawPileEmpty","drawClassName","discardClassName","tieClassName","src","Objectives","containerClassName","objCards","keyAddtion","redrawHandler","isFirst","cardKey","card","ObjectiveStatusEnum","freeze","ObjectiveCard","objectiveStatus","Incomplete","handleRadioChange","event","newStatus","target","objectivesImageClassName","baseDivClass","divName","claimedStyle","radioGroup","FormControl","component","RadioGroup","Radio","size","style","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"oPAAe,MAA0B,uCCA1B,MAA0B,sCCA1B,MAA0B,0CCA1B,MAA0B,0CCA1B,MAA0B,0CCA1B,MAA0B,0CCA1B,MAA0B,0CCA1B,MAA0B,0CCA1B,MAA0B,0CCA1B,MAA0B,0CCA1B,MAA0B,0CCA1B,MAA0B,0CCA1B,MAA0B,wCCA1B,MAA0B,wCCA1B,MAA0B,wCCA1B,MAA0B,wCCA1B,MAA0B,wCCA1B,MAA0B,2CCA1B,MAA0B,2CCA1B,MAA0B,2CCA1B,MAA0B,2CCA1B,MAA0B,2CCA1B,MAA0B,8CCA1B,MAA0B,8CCA1B,MAA0B,8CCA1B,MAA0B,8CCA1B,MAA0B,8C,GCA1B,I,4FCkDTA,G,MAAa,CACjB,CACEC,GAAI,EACJC,MAAOC,EACPC,KAAMC,GAER,CACEJ,GAAI,EACJC,MAAOI,EACPF,KAAMG,GAER,CACEN,GAAI,EACJC,MAAOM,EACPJ,KAAMC,GAER,CACEJ,GAAI,EACJC,MAAOO,EACPL,KAAMG,GAER,CACEN,GAAI,EACJC,MAAOQ,EACPN,KAAMC,KAIJM,EAAa,CACjB,CACEV,GAAI,EACJC,MAAOU,EACPR,KAAMG,EACNM,WAAY,GAEd,CACEZ,GAAI,EACJC,MAAOY,EACPV,KAAMC,EACNQ,WAAY,GAEd,CACEZ,GAAI,EACJC,MAAOa,EACPX,KAAMG,EACNM,WAAY,GAEd,CACEZ,GAAI,EACJC,MAAOc,EACPZ,KAAMC,EACNQ,WAAY,GAEd,CACEZ,GAAI,EACJC,MAAOe,EACPb,KAAMG,EACNM,WAAY,IAIVK,EAAW,CACf,CACEjB,GAAI,EACJC,MAAOiB,EACPf,KAAMG,EACNM,WAAY,GAEd,CACEZ,GAAI,EACJC,MAAOkB,EACPhB,KAAMC,EACNQ,WAAY,GAEd,CACEZ,GAAI,EACJC,MAAOmB,EACPjB,KAAMG,EACNM,WAAY,GAEd,CACEZ,GAAI,EACJC,MAAOoB,EACPlB,KAAMC,EACNQ,WAAY,GAEd,CACEZ,GAAI,EACJC,MAAOqB,EACPnB,KAAMG,EACNM,WAAY,IAIVW,GAAc,CAClB,CACEvB,GAAI,EACJC,MAAOuB,EACPrB,KAAMG,EACNM,WAAY,GAEd,CACEZ,GAAI,EACJC,MAAOwB,EACPtB,KAAMC,EACNQ,WAAY,GAEd,CACEZ,GAAI,EACJC,MAAOyB,EACPvB,KAAMG,EACNM,WAAY,GAEd,CACEZ,GAAI,EACJC,MAAO0B,EACPxB,KAAMC,EACNQ,WAAY,GAEd,CACEZ,GAAI,EACJC,MAAO2B,EACPzB,KAAMG,EACNM,WAAY,IAIViB,GAAiB,CACrB,CACE7B,GAAI,EACJC,MAAO6B,GAET,CACE9B,GAAI,EACJC,MAAO8B,GAET,CACE/B,GAAI,EACJC,MAAO+B,GAET,CACEhC,GAAI,EACJC,MAAOgC,GAET,CACEjC,GAAI,EACJC,MAAOiC,IAOLC,G,kLAEFC,SAASC,MAAQ,e,+BAIjB,OACE,sBAAKC,UAAU,iBAAf,UACE,cAACC,EAAA,EAAD,CAAYC,MAAM,SAASC,QAAQ,KAAnC,6CACA,cAAC,GAAD,W,GATUC,IAAMC,WAexB,SAASC,GAAQC,GACf,IAAIC,EAAGC,EAAGC,EACV,IAAKA,EAAIH,EAAEI,OAAS,EAAGD,EAAI,EAAGA,IAC1BF,EAAII,KAAKC,MAAMD,KAAKE,UAAYJ,EAAI,IACpCD,EAAIF,EAAEG,GACNH,EAAEG,GAAKH,EAAEC,GACTD,EAAEC,GAAKC,EAEX,OAAOF,EAET,IAAIQ,GAAgb,SAAUC,EAAKN,GAAK,GAAIO,MAAMC,QAAQF,GAAQ,OAAOA,EAAY,GAAIG,OAAOC,YAAYC,OAAOL,GAAQ,OAAxf,SAAuBA,EAAKN,GAAK,IAAIY,EAAO,GAAQC,GAAK,EAAUC,GAAK,EAAWC,OAAKC,EAAW,IAAM,IAAK,IAAiCC,EAA7BC,EAAKZ,EAAIG,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAAoBR,EAAKS,KAAKJ,EAAGK,QAAYtB,GAAKY,EAAKX,SAAWD,GAA3Da,GAAK,IAAoE,MAAOU,GAAOT,GAAK,EAAMC,EAAKQ,EAAtL,QAAuM,KAAWV,GAAMK,EAAE,QAAYA,EAAE,SAAjC,QAA2D,GAAIJ,EAAI,MAAMC,GAAQ,OAAOH,EAA6HY,CAAclB,EAAKN,GAAa,MAAM,IAAIyB,UAAU,yDAEhlBC,G,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MACH,CACEC,aAAc,GACdC,YAAa,GACbC,eAAgB,GAChBC,mBAAmB,EACnBC,mBAAmB,GACnBrE,YAAa,EACbsE,kBAAmB,WACnBC,YAAY,EACZC,YAAa,GAGjB,EAAKC,mBAAqB,EAAKA,mBAAmBC,KAAxB,gBAC1B,EAAKC,qBAAuB,EAAKA,qBAAqBD,KAA1B,gBAC5B,EAAKE,iBAAmB,EAAKA,iBAAiBF,KAAtB,gBAjBP,E,iEAqBjB,IAAIG,EAAc,WAEZC,EAAQ,EAMd,GALIC,OAAOF,cACTC,EAAQC,OAAOF,YACfA,EAAkC,KAApBvC,KAAK0C,IAAIF,GAAgB,YAAc,YAGnDC,OAAOE,OAAOJ,YAAa,CAC7B,IAAIK,EAAwBH,OAAOE,OAAOJ,YAAYM,KAAKC,MAAM,KAE7DC,EAAyB5C,GAAeyC,EAAuB,GAEnEL,EAAcQ,EAAuB,GAIvCC,QAAQC,IAAIV,GACZW,KAAKC,UAAS,iBAAO,CACnBnB,kBAAmBO,Q,0CAKjBE,OAAOE,OAAOJ,aAAe,aAAcE,OAAOE,OAAOJ,aAC3DE,OAAOE,OAAOJ,YAAYa,iBAAiB,SAAUF,KAAKf,oBAC1De,KAAKf,sBACI,wBAAyBM,QAClCA,OAAOW,iBAAiB,oBAAqBF,KAAKf,oBAClDe,KAAKf,sBAELa,QAAQK,KAAK,iC,2CAIIC,EAAoBC,EAAYC,EAAUC,EAAaC,EAAeC,GACzF,IAEIC,EAFAC,EAAWhH,EAAWiH,QAG1BF,EAAgBV,KAAKa,sBAAsB,CAACR,EAAYC,EAAUC,IAClEI,EAAWnE,GAAQmE,EAASG,OAAOJ,IAG9BD,IACHD,EAAgB,GAGlB,IAAIO,EAAiBN,EAAeT,KAAKgB,qBAAqBR,GAAiB,GAE/ER,KAAKC,UAAS,iBAAO,CACnBxB,aAAckC,EAASC,QACvBlC,YAAaiC,EAASC,QACtBjC,eAAgB,GAChBE,mBAAoBkC,EAAeH,QACnCpG,WAAY4F,EACZxB,mBAAoB4B,Q,4CAIFS,GAepB,IAdA,IAAIP,EAAgB,GAGhBQ,EAAaD,EAAU,GACvBE,EAAWF,EAAU,GACrBG,EAAcH,EAAU,GAExBI,EAAQ/G,EAAWsG,QACnBU,EAAMzG,EAAS+F,QACfW,EAASpG,GAAYyF,QAErBY,EAAQ,EAZmB,aAgBzBC,EAAmB3E,KAAKC,MAAMD,KAAKE,SAAWqE,EAAMxE,QAEpD6E,EAAeL,EAAMM,OAAOF,EAAkB,GAClDf,EAAczC,KAAKyD,EAAa,IAEhC,IAAME,EAAaF,EAAa,GAAG9H,GAGnC0H,EAAMA,EAAIO,QAAO,SAAUC,GACzB,OAAOA,EAAElI,KAAOgI,KAGlBL,EAASA,EAAOM,QAAO,SAAUC,GAC/B,OAAOA,EAAElI,KAAOgI,KAGlBJ,KAjBKA,EAAQN,GAAY,CAAC,IACtBO,EADqB,IAoB3BD,EAAQ,EAER,IArC+B,iBAsCzBO,EAAiBjF,KAAKC,MAAMD,KAAKE,SAAWsE,EAAIzE,QAEhD6E,EAAeJ,EAAIK,OAAOI,EAAgB,GAC9CrB,EAAczC,KAAKyD,EAAa,IAEhC,IAAME,EAAaF,EAAa,GAAG9H,GAEnC2H,EAASA,EAAOM,QAAO,SAAUC,GAC/B,OAAOA,EAAElI,KAAOgI,KAGlBJ,KAZKA,EAAQL,GAAU,CAAC,IACpBY,EADmB,IAiBzB,IAFAP,EAAQ,EAEDA,EAAQJ,GAAa,CAC1B,IAAIY,EAAoBlF,KAAKC,MAAMD,KAAKE,SAAWuE,EAAO1E,QAEtD6E,EAAeH,EAAOI,OAAOK,EAAmB,GACpDtB,EAAczC,KAAKyD,EAAa,IAEhCF,IAIF,OADA1B,QAAQC,IAAIW,GACLA,I,2CAIYF,GACnB,IAAIO,EAAiBvE,GAAQf,GAAemF,SAG5C,OADAG,EAAeY,OAAO,EAAG,EAAInB,GACtBO,I,uCAGQkB,GACf,IAAIC,EAAsBlC,KAAKxB,MAAMK,mBAAmBsD,KAAI,SAASC,GACnE,OAAOA,EAAQxI,MAGbyI,EAAa5G,GAAeoG,QAAO,SAASO,GAC9C,OAAQF,EAAoBI,SAASF,EAAQxI,OAG3C2I,EAAczF,KAAKC,MAAMD,KAAKE,SAAWqF,EAAWxF,QAEpD2F,EAAwBxC,KAAKxB,MAAMK,mBAAmB+B,QAC1D4B,EAAsBP,GAAaI,EAAWE,GAE9CvC,KAAKC,UAAS,iBAAO,CACnBpB,mBAAoB2D,EACpBzD,YAAY,Q,uCAKd,IAAI4B,EAAW,GACX8B,EAAa,GAEjB,GAAIzC,KAAKxB,MAAME,YAAY7B,OAAS,EAClC8D,EAAWX,KAAKxB,MAAME,YAAYkC,SAClC6B,EAAazC,KAAKxB,MAAMG,eAAeiC,SAC5B3C,KAAK0C,EAASgB,OAAOhB,EAAS9D,OAAS,EAAG,GAAG,IAExDmD,KAAKC,UAAS,iBAAO,CACnBvB,YAAaiC,EACbhC,eAAgB8D,UAEb,CAEL9B,EAAWnE,GAAQwD,KAAKxB,MAAMC,aAAamC,SAC3C6B,EAAa,GACb,IAAI1B,EAAiBf,KAAKgB,qBAAqBhB,KAAKxB,MAAMI,oBACtD8D,EAAiB1C,KAAKxB,MAAMQ,YAAc,EAE9CgB,KAAKC,UAAS,iBAAO,CACnBpB,mBAAoBkC,EACpBrC,YAAaiC,EACbhC,eAAgB8D,EAChB1D,YAAY,EACZC,YAAa0D,S,+BAKT,IAEJC,EACAC,EACAC,EAJG,OACDC,EAAsB9C,KAAKxB,MAAMhE,WAAa,EAKhDuI,EAA0B/C,KAAKxB,MAAMI,mBAAqB,EAAI,GAAK,SAEnEoE,EAAsB,aAAehD,KAAKxB,MAAMM,kBAAoBiE,EAGpED,EACFH,EAAsB,cAAC,GAAD,CAAsBtD,YAAaW,KAAKxB,MAAMM,kBAAmBmE,QAASjD,KAAKb,wBAGrGyD,EAAgB,cAAC,GAAD,CAAUvD,YAAaW,KAAKxB,MAAMM,kBAAmBoE,MAAOlD,KAAKxB,MAAME,YAAayE,QAASnD,KAAKxB,MAAMG,eAAgByE,KAAMJ,EAAqBK,SAAU,EAAMC,UAAWtD,KAAKxB,MAAME,YAAY7B,OAAS,EAAImD,KAAKxB,MAAME,YAAY7B,OAAO,EAAI,EAAG0G,aAAcvD,KAAKxB,MAAMG,eAAe9B,OAAS,EAAImD,KAAKxB,MAAMG,eAAe9B,OAAO,EAAI,EAAGoG,QAAS,kBAAM,EAAKO,oBACxXX,EAAsB,cAAC,GAAD,CAAYY,MAAOzD,KAAKxB,MAAMQ,YAAa0E,iBAAkB1D,KAAKxB,MAAMO,WAAY4E,kBAAmB3D,KAAKxB,MAAMG,eAAe9B,OAAQwC,YAAaW,KAAKxB,MAAMM,kBAAmBoE,MAAOlD,KAAKxB,MAAMK,mBAAoB+E,kBAAmB5D,KAAKZ,oBAG1Q,IAAIyE,EAAkB,mBAAqB7D,KAAKxB,MAAMM,kBAEtD,OACE,sBAAK5C,UAAW2H,EAAhB,UACGlB,EACAE,EACAD,S,GAvOoBtG,IAAMC,WA6O7BuH,GAAQC,YAAe,CAC3BC,WAAY,CACVC,UAAW,CACTC,SAAS,OAKTC,GAAcC,YAAW,CAC7BC,KAAM,CACJC,MAAO,UACPC,OAAQ,EACRC,aAAc,KAJEJ,CAMjBK,KAEGC,GAAYN,YAAW,CAC3BC,KAAM,CACJC,MAAO,UACPC,OAAQ,EACRC,aAAc,KAJAJ,CAMfK,KAEGE,GAAeP,YAAW,CAC9BC,KAAM,CACJC,MAAO,UACPC,OAAQ,EACRC,aAAc,KAJGJ,CAMlBK,KA4BGG,G,kDACJ,WAAYrG,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,MAAQ,CACXqG,eAAgB,sBAChBrK,WAAY,EACZgG,cAAe,EACfC,cAAc,EACdJ,WAAY,EACZC,SAAU,EACVC,YAAa,GAGf,EAAKuE,iBAAmB,EAAKA,iBAAiB5F,KAAtB,gBAbP,E,qEAgBM6F,EAAQ7G,GAC/B,IAAI1D,EAAmC,EAAtBwF,KAAKxB,MAAM8B,SAAwC,EAAzBN,KAAKxB,MAAM+B,YAStD,MAPe,QAAXwE,EACFvK,EAAqB,EAAR0D,EAAqC,EAAzB8B,KAAKxB,MAAM+B,YAChB,WAAXwE,IACTvK,EAAmC,EAAtBwF,KAAKxB,MAAM8B,SAAuB,EAARpC,GAGpB,qBAAuB1D,I,yCAK5C,IAAIwK,GAAehF,KAAKxB,MAAMiC,aAE9BX,QAAQC,IAAI,UACZC,KAAKC,UAAS,iBAAO,CACnBQ,aAAcuE,Q,wCAIAD,EAAQ7G,GACxB,IAAI+G,EAEAC,EAAiB,GADGlF,KAAKxB,MAAM6B,WAAaL,KAAKxB,MAAM8B,SAAWN,KAAKxB,MAAM+B,aAGlE,UAAXwE,GACFE,EAAqBjF,KAAKxB,MAAM6B,WAAa6E,EAC7CpF,QAAQC,IAAIgF,EAAS,IAAME,IACP,QAAXF,GACTE,EAAqBjF,KAAKxB,MAAM8B,SAAW4E,EAC3CpF,QAAQC,IAAIgF,EAAS,IAAME,IACP,WAAXF,IACTE,EAAqBjF,KAAKxB,MAAM+B,YAAc2E,EAC9CpF,QAAQC,IAAIgF,EAAS,IAAME,IAK7B,IAFA,IAAIE,EAAc,GAETvI,EAAI,EAAGA,GAAKqI,EAAoBrI,IACvCuI,EAAYlH,KAAK,CAACC,MAAOtB,EAAGwI,MAAMxI,IAGpC,OAAOuI,I,6CAIP,OAAOnF,KAAKxB,MAAM6B,WAAaL,KAAKxB,MAAM8B,SAAWN,KAAKxB,MAAM+B,aAAe,I,+BAGvE,IAAD,OACP,OACA,sBAAKrE,UAAU,uBAAf,UACE,eAACC,EAAA,EAAD,CAAYvC,GAAG,kBAAkByL,cAAY,EAA7C,oBACS,kCADT,yBAGA,cAACC,EAAA,EAAD,CAAexB,MAAOA,GAAtB,SACA,cAAC3H,EAAA,EAAD,CAAYE,QAAQ,YAAYD,MAAM,SAASF,UAAU,kBAAzD,SACK8D,KAAKxB,MAAMqG,mBAGhB,qBAAK3I,UAAU,mBAAf,SACE,cAACiI,GAAD,CACEjI,UAAU,mBACVqJ,aAAc,EACdC,kBAAgB,kBAChBC,kBAAkB,OAClBC,MAAO1F,KAAK2F,kBAAkB,QAAS3F,KAAKxB,MAAM6B,YAClDuF,KAAM,KACNC,IAAK,EACLC,IAAK,EACLC,SAAU,SAACjE,EAAG5D,GAAJ,OAAc,EAAK+B,UAAS,iBAAO,CAC3C4E,eAAgB,EAAKmB,yBAAyB,QAAS9H,GACvDmC,WAAYnC,OAEd+H,kBAAmB,SAACnE,EAAG5D,GAAJ,OAAc,EAAK+B,UAAS,iBAAO,CACpD4E,eAAgB,EAAKmB,yBAAyB,QAAS9H,GACvDmC,WAAYnC,WAIlB,qBAAKhC,UAAU,mBAAf,SACE,cAACwI,GAAD,CACExI,UAAU,mBACVqJ,aAAc,EACdC,kBAAgB,kBAChBC,kBAAkB,OAClBC,MAAO1F,KAAK2F,kBAAkB,MAAO3F,KAAKxB,MAAM8B,UAChDsF,KAAM,KACNC,IAAK,EACLC,IAAK,EACLC,SAAU,SAACjE,EAAG5D,GAAJ,OAAc,EAAK+B,UAAS,iBAAO,CAC3C4E,eAAgB,EAAKmB,yBAAyB,MAAO9H,GACrDoC,SAAUpC,OAEZ+H,kBAAmB,SAACnE,EAAG5D,GAAJ,OAAc,EAAK+B,UAAS,iBAAO,CACpD4E,eAAgB,EAAKmB,yBAAyB,MAAO9H,GACrDoC,SAAUpC,WAIhB,qBAAKhC,UAAU,mBAAf,SACE,cAACyI,GAAD,CACEzI,UAAU,mBACVqJ,aAAc,EACdC,kBAAgB,kBAChBC,kBAAkB,OAClBC,MAAO1F,KAAK2F,kBAAkB,SAAU3F,KAAKxB,MAAM+B,aACnDqF,KAAM,KACNC,IAAK,EACLC,IAAK,EACLC,SAAU,SAACjE,EAAG5D,GAAJ,OAAc,EAAK+B,UAAS,iBAAO,CAC3C4E,eAAgB,EAAKmB,yBAAyB,SAAU9H,GACxDqC,YAAarC,OAEf+H,kBAAmB,SAACnE,EAAG5D,GAAJ,OAAc,EAAK+B,UAAS,iBAAO,CACpD4E,eAAgB,EAAKmB,yBAAyB,SAAU9H,GACxDqC,YAAarC,WAInB,cAACgI,EAAA,EAAD,CACEC,QAAS,cAACC,EAAA,EAAD,CAAUC,QAASrG,KAAKxB,MAAMiC,aAAcsF,SAAU/F,KAAK8E,iBAAkBR,MAAM,YAC5Fc,MAAM,gCAER,qBAAKlJ,UAAU,8BAAf,SACE,cAACuI,EAAA,EAAD,CACEvI,UAAU,8BACVqJ,aAAc,EACdC,kBAAgB,kBAChBC,kBAAkB,OAClBC,OAAO,EACPE,KAAM,EACNC,IAAK,EACLC,IAAK,EACLQ,UAAWtG,KAAKxB,MAAMiC,aACtBsF,SAAU,SAACjE,EAAG5D,GAAJ,OAAc,EAAK+B,UAAS,iBAAO,CAC3CO,cAAetC,OAEjB+H,kBAAmB,SAACnE,EAAG5D,GAAJ,OAAc,EAAK+B,UAAS,iBAAO,CACpDO,cAAetC,WAIrB,cAACqI,EAAA,EAAD,CAAQlK,QAAQ,YAAYiK,UAAWtG,KAAKwG,uBAAwBlC,MAAM,UAAUrB,QAAS,kBAAM,EAAK1E,MAAM0E,QAAQ,EAAKzE,MAAMhE,WAAY,EAAKgE,MAAM6B,WAAY,EAAK7B,MAAM8B,SAAU,EAAK9B,MAAM+B,YAAa,EAAK/B,MAAMgC,cAAe,EAAKhC,MAAMiC,eAAtP,0B,GAlK6BnE,IAAMC,WAwKnCkK,G,kDACJ,WAAYlI,GAAQ,uCACZA,G,qDAGE,IACJoC,EACA+F,EACAC,EAEAC,EALG,OAOHC,EAAgB7G,KAAKzB,MAAM2E,MAAMrG,QAAU,EAE3CiK,EAAgB,QAAW9G,KAAKzB,MAAMc,YACtC0H,EAAmB,WAAc/G,KAAKzB,MAAMc,YAC5C2H,EAAe,cAAiBhH,KAAKzB,MAAMc,YAkB/C,OAfIW,KAAKzB,MAAM2E,MAAMlD,KAAKzB,MAAM+E,aAC9B3C,EAAW,qBAAKzE,UAAW4K,EAAeG,IAAKjH,KAAKzB,MAAM2E,MAAMlD,KAAKzB,MAAM+E,WAAWvJ,OACtF6M,EAAkB,eAAiB5G,KAAKzB,MAAM2E,MAAMrG,QAGlDmD,KAAKzB,MAAM4E,QAAQnD,KAAKzB,MAAMgF,gBAE5BsD,IACFF,EAAa,qBAAKzK,UAAW8K,EAAcC,IAAKjH,KAAKzB,MAAM4E,QAAQ,GAAGpJ,OACtE6M,EAAkB,gCAGpBF,EAAc,qBAAKxK,UAAW6K,EAAkBE,IAAKjH,KAAKzB,MAAM4E,QAAQnD,KAAKzB,MAAMgF,cAAc1J,SAIjG,sBAAKqC,UAAW8D,KAAKzB,MAAM6E,KAA3B,UACGzC,EACAgG,EACAD,EACD,gCACA,cAACvK,EAAA,EAAD,CAAYE,QAAQ,KAApB,SAA0BuK,IACzB5G,KAAKzB,MAAM8E,QAAU,cAACkD,EAAA,EAAD,CAAQlK,QAAQ,YAAYiI,MAAM,UAAUrB,QAAS,kBAAM,EAAK1E,MAAM0E,WAAtE,SAAkFjD,KAAKzB,MAAM2E,MAAMrG,OAAS,EAAI,OAAS,eAAyB,e,GAzCzJP,IAAMC,WAgDvB2K,G,kDACJ,WAAY3I,GAAQ,uCACZA,G,qDASN,IALA,IAAI4I,EAAqB,wBAA0BnH,KAAKzB,MAAMc,YAE1D+H,EAAW,GAEXC,EADgBrH,KAAKzB,MAAM2E,MAAMrG,QACHmD,KAAKzB,MAAMkF,MAAQ,GAC5C7G,EAAI,EAAGA,EAAIoD,KAAKzB,MAAM2E,MAAMrG,OAAQD,IAC3CwK,EAASnJ,KAAK,cAAC,GAAD,CAA0CyF,iBAAkB1D,KAAKzB,MAAMmF,iBAAkBC,kBAAmB3D,KAAKzB,MAAMoF,kBAAmB2D,cAAetH,KAAKzB,MAAMqF,kBAAmB2D,QAAe,IAAN3K,EAAS4K,QAAS5K,EAAGyC,YAAaW,KAAKzB,MAAMc,YAAaoI,KAAMzH,KAAKzB,MAAM2E,MAAMtG,GAAKoD,KAAKzB,MAAM2E,MAAMtG,GAAG/C,MAAQ,MAA7R+C,EAAI,EAAKyK,IAG9C,OACE,qBAAKnL,UAAWiL,EAAhB,SACGC,Q,GAjBgB9K,IAAMC,WAwBzBmL,GAAsBnK,OAAOoK,OAAO,CAAC,WAAa,EAAG,MAAQ,EAAG,OAAS,IAEzEC,G,kDACJ,WAAYrJ,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,MAAQ,CACXqJ,gBAAiBH,GAAoBI,YAGvC,EAAKC,kBAAoB,EAAKA,kBAAkB7I,KAAvB,gBAPR,E,8DAWD8I,GAChBlI,QAAQC,IAAIC,KAAKxB,MAAMqJ,iBACvB,IAAII,EAAYD,EAAME,OAAOhK,MAC7B4B,QAAQC,IAAIkI,GAEZjI,KAAKC,UAAS,iBAAO,CACnB4H,gBAAiBI,Q,+BAIX,IAAD,OACPnI,QAAQC,IAAIC,KAAKzB,MAAMiJ,SACvB,IAAIW,EAA2B,cAAgBnI,KAAKzB,MAAMc,YACtD+I,EAAe,uBAAyBpI,KAAKzB,MAAMc,YACnDgJ,EAAUrI,KAAKzB,MAAMgJ,QAAUa,EAAe,SAAWA,EAEzDE,EAA6C,GAA9BtI,KAAKxB,MAAMqJ,gBAAuB,KAAO,CAAC,QAAW,OAEpEU,EAAa,KAajB,OAXKvI,KAAKzB,MAAMmF,kBAAqD,IAAjC1D,KAAKzB,MAAMoF,kBAEpC3D,KAAKzB,MAAMoF,mBAAqB,IACzC4E,EAAa,cAACC,EAAA,EAAD,CAAaC,UAAU,WAAvB,SACX,eAACC,EAAA,EAAD,CAAYxK,MAAO8B,KAAKxB,MAAMqJ,gBAAiB9B,SAAU/F,KAAK+H,kBAA9D,UACE,cAAC7B,EAAA,EAAD,CAA0BhI,MAAM,IAAIiI,QAAS,cAACwC,EAAA,EAAD,CAAOrE,MAAM,UAAUsE,KAAK,UAAWxD,MAAM,SAApE,KACtB,cAACc,EAAA,EAAD,CAA0BhI,MAAM,IAAIiI,QAAS,cAACwC,EAAA,EAAD,CAAOrE,MAAM,UAAUsE,KAAK,UAAWxD,MAAM,UAApE,WALzBmD,EAAa,cAAChC,EAAA,EAAD,CAAQrK,UAAU,gBAAgB0M,KAAK,QAAQvM,QAAQ,YAAYiI,MAAM,UAAUrB,QAAS,kBAAM,EAAK1E,MAAM+I,cAAc,EAAK/I,MAAMiJ,UAAtI,oBAWd,sBAAKtL,UAAWmM,EAAhB,UACE,qBAA8BQ,MAAOP,EAAcpM,UAAWiM,EAA0BlB,IAAKjH,KAAKzB,MAAMkJ,MAA9FzH,KAAKzB,MAAMiJ,SACpBe,S,GA9CmBjM,IAAMC,WAoDnBR,MCvyBA+M,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFzN,SAAS0N,eAAe,SAM1BZ,O","file":"static/js/main.0f3dbbef.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/back_right.5d7514db.png\";","export default __webpack_public_path__ + \"static/media/back_left.f9380e33.png\";","export default __webpack_public_path__ + \"static/media/basic_front_1.2fee07ec.png\";","export default __webpack_public_path__ + \"static/media/basic_front_2.c502fa87.png\";","export default __webpack_public_path__ + \"static/media/basic_front_3.794612d8.png\";","export default __webpack_public_path__ + \"static/media/basic_front_4.46b1bc0b.png\";","export default __webpack_public_path__ + \"static/media/basic_front_5.f420f6d7.png\";","export default __webpack_public_path__ + \"static/media/green_front_1.c70d1160.png\";","export default __webpack_public_path__ + \"static/media/green_front_2.96fdcca1.png\";","export default __webpack_public_path__ + \"static/media/green_front_3.66f05e8f.png\";","export default __webpack_public_path__ + \"static/media/green_front_4.b57910a3.png\";","export default __webpack_public_path__ + \"static/media/green_front_5.8f95a384.png\";","export default __webpack_public_path__ + \"static/media/red_front_1.f8058cf3.png\";","export default __webpack_public_path__ + \"static/media/red_front_2.b806a5a3.png\";","export default __webpack_public_path__ + \"static/media/red_front_3.7ed0661c.png\";","export default __webpack_public_path__ + \"static/media/red_front_4.4586df07.png\";","export default __webpack_public_path__ + \"static/media/red_front_5.ef415b43.png\";","export default __webpack_public_path__ + \"static/media/purple_front_1.b9b9da93.png\";","export default __webpack_public_path__ + \"static/media/purple_front_2.721046a8.png\";","export default __webpack_public_path__ + \"static/media/purple_front_3.d422f7b3.png\";","export default __webpack_public_path__ + \"static/media/purple_front_4.5d137886.png\";","export default __webpack_public_path__ + \"static/media/purple_front_5.d823700f.png\";","export default __webpack_public_path__ + \"static/media/objective_front_1.b636a3a6.png\";","export default __webpack_public_path__ + \"static/media/objective_front_2.9a6dd850.png\";","export default __webpack_public_path__ + \"static/media/objective_front_3.ebcc7853.png\";","export default __webpack_public_path__ + \"static/media/objective_front_4.9754c7d5.png\";","export default __webpack_public_path__ + \"static/media/objective_front_5.9387c67c.png\";","export default __webpack_public_path__ + \"static/media/objective_back.7c8fba6a.png\";","import backRight from './images/back_right.png';\r\nimport backLeft from './images/back_left.png';\r\n\r\nimport basicFront1 from './images/basic_front_1.png';\r\nimport basicFront2 from './images/basic_front_2.png';\r\nimport basicFront3 from './images/basic_front_3.png';\r\nimport basicFront4 from './images/basic_front_4.png';\r\nimport basicFront5 from './images/basic_front_5.png';\r\n\r\nimport greenFront1 from './images/green_front_1.png';\r\nimport greenFront2 from './images/green_front_2.png';\r\nimport greenFront3 from './images/green_front_3.png';\r\nimport greenFront4 from './images/green_front_4.png';\r\nimport greenFront5 from './images/green_front_5.png';\r\n\r\nimport redFront1 from './images/red_front_1.png';\r\nimport redFront2 from './images/red_front_2.png';\r\nimport redFront3 from './images/red_front_3.png';\r\nimport redFront4 from './images/red_front_4.png';\r\nimport redFront5 from './images/red_front_5.png';\r\n\r\nimport purpleFront1 from './images/purple_front_1.png';\r\nimport purpleFront2 from './images/purple_front_2.png';\r\nimport purpleFront3 from './images/purple_front_3.png';\r\nimport purpleFront4 from './images/purple_front_4.png';\r\nimport purpleFront5 from './images/purple_front_5.png';\r\n\r\nimport objective1 from './images/objective_front_1.png';\r\nimport objective2 from './images/objective_front_2.png';\r\nimport objective3 from './images/objective_front_3.png';\r\nimport objective4 from './images/objective_front_4.png';\r\nimport objective5 from './images/objective_front_5.png';\r\nimport objectiveBack from './images/objective_back.png';\r\n\r\nimport './App.css';\r\nimport React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { createMuiTheme, ThemeProvider, withStyles } from '@material-ui/core/styles';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControl from '@material-ui/core/FormControl';\r\n\r\nimport MetaTags from 'react-meta-tags';\r\n\r\nimport 'fontsource-roboto';\r\n\r\nconst BasicCards = [\r\n  {\r\n    id: 1,\r\n    front: basicFront1,\r\n    back: backRight\r\n  },\r\n  {\r\n    id: 2,\r\n    front: basicFront2,\r\n    back: backLeft\r\n  },\r\n  {\r\n    id: 3,\r\n    front: basicFront3,\r\n    back: backRight\r\n  },\r\n  {\r\n    id: 4,\r\n    front: basicFront4,\r\n    back: backLeft\r\n  },\r\n  {\r\n    id: 5,\r\n    front: basicFront5,\r\n    back: backRight\r\n  }\r\n];\r\n\r\nconst GreenCards = [\r\n  {\r\n    id: 1,\r\n    front: greenFront1,\r\n    back: backLeft,\r\n    difficulty: 0\r\n  },\r\n  {\r\n    id: 2,\r\n    front: greenFront2,\r\n    back: backRight,\r\n    difficulty: 0\r\n  },\r\n  {\r\n    id: 3,\r\n    front: greenFront3,\r\n    back: backLeft,\r\n    difficulty: 0\r\n  },\r\n  {\r\n    id: 4,\r\n    front: greenFront4,\r\n    back: backRight,\r\n    difficulty: 0\r\n  },\r\n  {\r\n    id: 5,\r\n    front: greenFront5,\r\n    back: backLeft,\r\n    difficulty: 0\r\n  }\r\n];\r\n\r\nconst RedCards = [\r\n  {\r\n    id: 1,\r\n    front: redFront1,\r\n    back: backLeft,\r\n    difficulty: 1\r\n  },\r\n  {\r\n    id: 2,\r\n    front: redFront2,\r\n    back: backRight,\r\n    difficulty: 1\r\n  },\r\n  {\r\n    id: 3,\r\n    front: redFront3,\r\n    back: backLeft,\r\n    difficulty: 1\r\n  },\r\n  {\r\n    id: 4,\r\n    front: redFront4,\r\n    back: backRight,\r\n    difficulty: 1\r\n  },\r\n  {\r\n    id: 5,\r\n    front: redFront5,\r\n    back: backLeft,\r\n    difficulty: 1\r\n  }\r\n];\r\n\r\nconst PurpleCards = [\r\n  {\r\n    id: 1,\r\n    front: purpleFront1,\r\n    back: backLeft,\r\n    difficulty: 2\r\n  },\r\n  {\r\n    id: 2,\r\n    front: purpleFront2,\r\n    back: backRight,\r\n    difficulty: 2\r\n  },\r\n  {\r\n    id: 3,\r\n    front: purpleFront3,\r\n    back: backLeft,\r\n    difficulty: 2\r\n  },\r\n  {\r\n    id: 4,\r\n    front: purpleFront4,\r\n    back: backRight,\r\n    difficulty: 2\r\n  },\r\n  {\r\n    id: 5,\r\n    front: purpleFront5,\r\n    back: backLeft,\r\n    difficulty: 2\r\n  }\r\n];\r\n\r\nconst ObjectiveCards = [\r\n  {\r\n    id: 1,\r\n    front: objective1\r\n  },\r\n  {\r\n    id: 2,\r\n    front: objective2\r\n  },\r\n  {\r\n    id: 3,\r\n    front: objective3\r\n  },\r\n  {\r\n    id: 4,\r\n    front: objective4\r\n  },\r\n  {\r\n    id: 5,\r\n    front: objective5\r\n  }\r\n];\r\n\r\nconst difficultyCardCount = 5;\r\n\r\nconst version = 'v0.67';\r\nclass App extends React.Component {\r\n  componentDidMount() {\r\n    document.title = \"Arnak Solo\";\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='root-container'>\r\n        <Typography align='center' variant='h5'>Lost Ruins of Arnak Solo Helper</Typography>\r\n        <GameController />\r\n      </div> \r\n    );\r\n  }\r\n}\r\n\r\nfunction shuffle(a) {\r\n  var j, x, i;\r\n  for (i = a.length - 1; i > 0; i--) {\r\n      j = Math.floor(Math.random() * (i + 1));\r\n      x = a[i];\r\n      a[i] = a[j];\r\n      a[j] = x;\r\n  }\r\n  return a;\r\n}\r\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\r\n\r\nclass GameController extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = \r\n      {\r\n        selectedDeck: [],\r\n        cardsInDeck: [],\r\n        cardsInDiscard: [],\r\n        numberOfObjectives:3,\r\n        selectedObjectives:[],\r\n        difficulty: -1, //if -1, render difficulty selector else render draw piles\r\n        deviceOrientation: 'portrait',\r\n        hasRedrawn: false,\r\n        roundNumber: 1\r\n      };\r\n\r\n    this.changedOrientation = this.changedOrientation.bind(this);\r\n    this.onDifficultySelected = this.onDifficultySelected.bind(this);\r\n    this.onRedrawSelected = this.onRedrawSelected.bind(this);\r\n  }\r\n\r\n  changedOrientation() {\r\n    var orientation = 'portrait';\r\n      var type = 'primary';\r\n      var angle = 0;\r\n    if (window.orientation) {\r\n      angle = window.orientation;\r\n      orientation = Math.abs(angle) === 90 ? 'landscape' : 'portrait';\r\n    }\r\n\r\n    if (window.screen.orientation) {\r\n      var _window$screen$orient = window.screen.orientation.type.split('-');\r\n\r\n      var _window$screen$orient2 = _slicedToArray(_window$screen$orient, 2);\r\n\r\n      orientation = _window$screen$orient2[0];\r\n\r\n    }\r\n\r\n    console.log(orientation);\r\n    this.setState(() => ({\r\n      deviceOrientation: orientation\r\n    }));\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (window.screen.orientation && 'onchange' in window.screen.orientation) {\r\n      window.screen.orientation.addEventListener('change', this.changedOrientation);\r\n      this.changedOrientation();\r\n    } else if ('onorientationchange' in window) {\r\n      window.addEventListener('orientationchange', this.changedOrientation);\r\n      this.changedOrientation();\r\n    } else {\r\n      console.warn('No orientationchange events');\r\n    }\r\n  }\r\n\r\n  onDifficultySelected(selectedDifficulty, greenCards, redCards, purpleCards, numObjectives, objectivesOn) {\r\n    var drawPile = BasicCards.slice();\r\n\r\n    var selectedCards = [];\r\n    selectedCards = this.selectDifficultyCards([greenCards, redCards, purpleCards]);\r\n    drawPile = shuffle(drawPile.concat(selectedCards));\r\n\r\n\r\n    if (!objectivesOn) {\r\n      numObjectives = 0;\r\n    }\r\n\r\n    var tempObjectives = objectivesOn ? this.selectObjectiveCards(numObjectives) : [];\r\n\r\n    this.setState(() => ({\r\n      selectedDeck: drawPile.slice(),\r\n      cardsInDeck: drawPile.slice(),\r\n      cardsInDiscard: [],\r\n      selectedObjectives: tempObjectives.slice(),\r\n      difficulty: selectedDifficulty,\r\n      numberOfObjectives: numObjectives\r\n    }));\r\n  }\r\n\r\n  selectDifficultyCards(cardTypes) {\r\n    var selectedCards = [];\r\n    var i = 1;\r\n\r\n    var greenCount = cardTypes[0];\r\n    var redCount = cardTypes[1];\r\n    var purpleCount = cardTypes[2];\r\n\r\n    var green = GreenCards.slice();\r\n    var red = RedCards.slice();\r\n    var purple = PurpleCards.slice();\r\n\r\n    var count = 0;\r\n\r\n    //TODO move this into function\r\n    while (count < greenCount) {\r\n      var randomGreenIndex = Math.floor(Math.random() * green.length);\r\n\r\n      var selectedCard = green.splice(randomGreenIndex, 1);\r\n      selectedCards.push(selectedCard[0]);\r\n\r\n      const selectedId = selectedCard[0].id;\r\n\r\n      //Remove pair from base cards: TODO put red and purple into base cards.  THen when doing red, just put purple in\r\n      red = red.filter(function (e) {\r\n        return e.id !== selectedId;\r\n      });\r\n\r\n      purple = purple.filter(function (e) {\r\n        return e.id !== selectedId;\r\n      });\r\n\r\n      count++;\r\n    }\r\n\r\n    count = 0;\r\n\r\n    while (count < redCount) {\r\n      var randomRedIndex = Math.floor(Math.random() * red.length);\r\n\r\n      var selectedCard = red.splice(randomRedIndex, 1);\r\n      selectedCards.push(selectedCard[0]);\r\n\r\n      const selectedId = selectedCard[0].id;\r\n\r\n      purple = purple.filter(function (e) {\r\n        return e.id !== selectedId;\r\n      });\r\n\r\n      count++;\r\n    }\r\n\r\n    count = 0;\r\n\r\n    while (count < purpleCount) {\r\n      var randomPurpleIndex = Math.floor(Math.random() * purple.length);\r\n\r\n      var selectedCard = purple.splice(randomPurpleIndex, 1);\r\n      selectedCards.push(selectedCard[0]);\r\n\r\n      count++;\r\n    }\r\n\r\n    console.log(selectedCards);\r\n    return selectedCards;\r\n  }\r\n\r\n\r\n  selectObjectiveCards(numObjectives) {\r\n    var tempObjectives = shuffle(ObjectiveCards.slice());\r\n\r\n    tempObjectives.splice(0, 5 - numObjectives);\r\n    return tempObjectives;\r\n  }\r\n\r\n  onRedrawSelected(cardIndex) {\r\n    var currentObjectivesId = this.state.selectedObjectives.map(function(element) {\r\n      return element.id;\r\n    });\r\n\r\n    var unselected = ObjectiveCards.filter(function(element) {\r\n      return !currentObjectivesId.includes(element.id);\r\n    });\r\n\r\n    var randomIndex = Math.floor(Math.random() * unselected.length);\r\n\r\n    var newSelectedObjectives = this.state.selectedObjectives.slice();\r\n    newSelectedObjectives[cardIndex] = unselected[randomIndex];\r\n\r\n    this.setState(() => ({\r\n      selectedObjectives: newSelectedObjectives,\r\n      hasRedrawn: true\r\n    }));\r\n  }\r\n\r\n  handleDrawCard() {\r\n    var drawPile = [];\r\n    var newDiscard = [];\r\n\r\n    if (this.state.cardsInDeck.length > 0) {\r\n      drawPile = this.state.cardsInDeck.slice();\r\n      newDiscard = this.state.cardsInDiscard.slice(); \r\n      newDiscard.push(drawPile.splice(drawPile.length - 1, 1)[0]);\r\n\r\n      this.setState(() => ({\r\n        cardsInDeck: drawPile,\r\n        cardsInDiscard: newDiscard\r\n      }));\r\n    } else {\r\n      //New Round\r\n      drawPile = shuffle(this.state.selectedDeck.slice());\r\n      newDiscard = [];\r\n      var tempObjectives = this.selectObjectiveCards(this.state.numberOfObjectives);\r\n      let newRoundNumber = this.state.roundNumber + 1;\r\n\r\n      this.setState(() => ({\r\n        selectedObjectives: tempObjectives,\r\n        cardsInDeck: drawPile,\r\n        cardsInDiscard: newDiscard,\r\n        hasRedrawn: false,\r\n        roundNumber: newRoundNumber\r\n      }));\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const selectingDifficulty = this.state.difficulty < 0;\r\n    let difficultyComponent;\r\n    let drawComponent;\r\n    let objectivesComponent;\r\n\r\n    let selectedObjNameAddition = this.state.numberOfObjectives > 0 ? '' : '-noobj';\r\n  \r\n    let drawOrientationName = 'draw-pile-' + this.state.deviceOrientation + selectedObjNameAddition;\r\n\r\n\r\n    if (selectingDifficulty) {\r\n      difficultyComponent = <DifficultyController orientation={this.state.deviceOrientation} onClick={this.onDifficultySelected}/>;\r\n\r\n    } else {\r\n      drawComponent = <DrawPile orientation={this.state.deviceOrientation} cards={this.state.cardsInDeck} discard={this.state.cardsInDiscard} name={drawOrientationName} canDraw ={true} drawIndex={this.state.cardsInDeck.length > 0 ? this.state.cardsInDeck.length-1 : 0} discardIndex={this.state.cardsInDiscard.length > 0 ? this.state.cardsInDiscard.length-1 : 0} onClick={() => this.handleDrawCard()}/>;\r\n      objectivesComponent = <Objectives round={this.state.roundNumber} playerHasRedrawn={this.state.hasRedrawn} cardsDrawnByRival={this.state.cardsInDiscard.length} orientation={this.state.deviceOrientation} cards={this.state.selectedObjectives} onRedrawObjective={this.onRedrawSelected}/>;\r\n    }\r\n\r\n    let orientationName = 'cards-container-' + this.state.deviceOrientation;\r\n\r\n    return (\r\n      <div className={orientationName}>\r\n        {difficultyComponent}\r\n        {objectivesComponent}\r\n        {drawComponent}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst theme = createMuiTheme({\r\n  typography: {\r\n    subtitle1: {\r\n      fontSize:20\r\n    }\r\n  },\r\n});\r\n\r\nconst GreenSlider = withStyles({\r\n  root: {\r\n    color: '#6b9c3a',\r\n    height: 3,\r\n    marginBottom: 20\r\n  },\r\n})(Slider);\r\n\r\nconst RedSlider = withStyles({\r\n  root: {\r\n    color: '#ad1018',\r\n    height: 3,\r\n    marginBottom: 20\r\n  },\r\n})(Slider);\r\n\r\nconst PurpleSlider = withStyles({\r\n  root: {\r\n    color: '#63298b',\r\n    height: 3,\r\n    marginBottom: 20\r\n  },\r\n})(Slider);\r\n\r\nconst marks = [\r\n  {\r\n    value: 0,\r\n    label: '0',\r\n  },\r\n  {\r\n    value: 1,\r\n    label: '1',\r\n  },\r\n  {\r\n    value: 2,\r\n    label: '2',\r\n  },\r\n  {\r\n    value: 3,\r\n    label: '3',\r\n  },\r\n  {\r\n    value: 4,\r\n    label: '4',\r\n  }, {\r\n    value: 5,\r\n    label: '5',\r\n  }\r\n];\r\n\r\nclass DifficultyController extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      difficultyText: \"Difficulty Level: 0\", \r\n      difficulty: 0,\r\n      numObjectives: 3,\r\n      objectivesOn: true,\r\n      greenCards: 0,\r\n      redCards: 0,\r\n      purpleCards: 0\r\n    }\r\n\r\n    this.toggleObjectives = this.toggleObjectives.bind(this);\r\n  }\r\n\r\n  friendlyDifficultyString(slider, value) {\r\n    var difficulty = this.state.redCards * 1 + this.state.purpleCards * 2;\r\n\r\n    if (slider === \"red\") {\r\n      difficulty = value * 1 + this.state.purpleCards * 2;\r\n    } else if (slider === \"purple\") {\r\n      difficulty = this.state.redCards * 1 + value * 2;\r\n    }\r\n\r\n    let friendlyString = \"Difficulty Level: \" + difficulty;\r\n    return friendlyString;\r\n  }\r\n\r\n  toggleObjectives() {\r\n    let toggleState = !this.state.objectivesOn;\r\n\r\n    console.log('toggle');\r\n    this.setState(() => ({\r\n      objectivesOn: toggleState\r\n    }));\r\n  }\r\n\r\n  getMarksForSlider(slider, value) {\r\n    var currentSliderValue;\r\n    var cardsAlreadyAdded = this.state.greenCards + this.state.redCards + this.state.purpleCards;\r\n    var availableSpace = 5 - cardsAlreadyAdded; \r\n    \r\n    if (slider === \"green\") {\r\n      currentSliderValue = this.state.greenCards + availableSpace;\r\n      console.log(slider + \" \" + currentSliderValue);\r\n    } else if (slider === \"red\") {\r\n      currentSliderValue = this.state.redCards + availableSpace;\r\n      console.log(slider + \" \" + currentSliderValue);\r\n    } else if (slider === \"purple\") {\r\n      currentSliderValue = this.state.purpleCards + availableSpace;\r\n      console.log(slider + \" \" + currentSliderValue);\r\n    }\r\n\r\n    var sliderMarks = [];\r\n    \r\n    for (var i = 0; i <= currentSliderValue; i++) {\r\n      sliderMarks.push({value: i, label:i});\r\n    }\r\n\r\n    return sliderMarks;\r\n  }\r\n\r\n  hasSelectedFiveCards() {\r\n    return this.state.greenCards + this.state.redCards + this.state.purpleCards == 5;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n    <div className='difficulty-container'>\r\n      <Typography id=\"discrete-slider\" gutterBottom>\r\n        Select <b>5</b> Rival Action Cards\r\n      </Typography>\r\n      <ThemeProvider theme={theme}>\r\n      <Typography variant='subtitle1' align='center' className=\"difficulty-text\">\r\n          {this.state.difficultyText}\r\n      </Typography>\r\n      </ThemeProvider>\r\n      <div className='slider-container'>\r\n        <GreenSlider\r\n          className='slider-component'\r\n          defaultValue={0}\r\n          aria-labelledby=\"discrete-slider\"\r\n          valueLabelDisplay=\"auto\"\r\n          marks={this.getMarksForSlider(\"green\", this.state.greenCards)}\r\n          step={null}\r\n          min={0}\r\n          max={5}\r\n          onChange={(e, value) => this.setState(() => ({\r\n            difficultyText: this.friendlyDifficultyString(\"green\", value),\r\n            greenCards: value,\r\n          }))}\r\n          onChangeCommitted={(e, value) => this.setState(() => ({\r\n            difficultyText: this.friendlyDifficultyString(\"green\", value),\r\n            greenCards: value,\r\n          }))}\r\n        />\r\n      </div>\r\n      <div className='slider-container'>\r\n        <RedSlider\r\n          className='slider-component'\r\n          defaultValue={0}\r\n          aria-labelledby=\"discrete-slider\"\r\n          valueLabelDisplay=\"auto\"\r\n          marks={this.getMarksForSlider(\"red\", this.state.redCards)}\r\n          step={null}\r\n          min={0}\r\n          max={5}\r\n          onChange={(e, value) => this.setState(() => ({\r\n            difficultyText: this.friendlyDifficultyString(\"red\", value),\r\n            redCards: value\r\n          }))}\r\n          onChangeCommitted={(e, value) => this.setState(() => ({\r\n            difficultyText: this.friendlyDifficultyString(\"red\", value),\r\n            redCards: value\r\n          }))}\r\n        />\r\n      </div>\r\n      <div className='slider-container'>\r\n        <PurpleSlider\r\n          className='slider-component'\r\n          defaultValue={0}\r\n          aria-labelledby=\"discrete-slider\"\r\n          valueLabelDisplay=\"auto\"\r\n          marks={this.getMarksForSlider(\"purple\", this.state.purpleCards)}\r\n          step={null}\r\n          min={0}\r\n          max={5}\r\n          onChange={(e, value) => this.setState(() => ({\r\n            difficultyText: this.friendlyDifficultyString(\"purple\", value),\r\n            purpleCards: value\r\n          }))}\r\n          onChangeCommitted={(e, value) => this.setState(() => ({\r\n            difficultyText: this.friendlyDifficultyString(\"purple\", value),\r\n            purpleCards: value\r\n          }))}\r\n        />\r\n      </div>\r\n      <FormControlLabel\r\n        control={<Checkbox checked={this.state.objectivesOn} onChange={this.toggleObjectives} color='primary' />}\r\n        label=\"Select Number of Objectives\"\r\n      />\r\n      <div className='objectives-slider-container'>\r\n        <Slider\r\n          className='objectives-slider-container'\r\n          defaultValue={3}\r\n          aria-labelledby=\"discrete-slider\"\r\n          valueLabelDisplay=\"auto\"\r\n          marks={true}\r\n          step={1}\r\n          min={2}\r\n          max={4}\r\n          disabled={!this.state.objectivesOn}\r\n          onChange={(e, value) => this.setState(() => ({\r\n            numObjectives: value\r\n          }))}\r\n          onChangeCommitted={(e, value) => this.setState(() => ({\r\n            numObjectives: value\r\n          }))}\r\n        />\r\n      </div>\r\n      <Button variant='contained' disabled={!this.hasSelectedFiveCards()} color='primary' onClick={() => this.props.onClick(this.state.difficulty, this.state.greenCards, this.state.redCards, this.state.purpleCards, this.state.numObjectives, this.state.objectivesOn)}>Start</Button>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass DrawPile extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    let drawPile;\r\n    let discardPile;\r\n    let tiebreaker;\r\n\r\n    let deckDescription;\r\n\r\n    let drawPileEmpty = this.props.cards.length <= 0;\r\n\r\n    let drawClassName = \"Draw-\"  + this.props.orientation;\r\n    let discardClassName = \"Discard-\"  + this.props.orientation;\r\n    let tieClassName = \"Tiebreaker-\"  + this.props.orientation;\r\n\r\n\r\n    if (this.props.cards[this.props.drawIndex]) {\r\n      drawPile = <img className={drawClassName} src={this.props.cards[this.props.drawIndex].back}/>\r\n      deckDescription = \"Cards Left: \" + this.props.cards.length;\r\n    }\r\n\r\n    if (this.props.discard[this.props.discardIndex]) {\r\n\r\n      if (drawPileEmpty) {\r\n        tiebreaker = <img className={tieClassName} src={this.props.discard[0].back}/>\r\n        deckDescription = \"Deck empty: Tiebreaker shown\";\r\n      }\r\n\r\n      discardPile = <img className={discardClassName} src={this.props.discard[this.props.discardIndex].front}/>\r\n    }\r\n\r\n    return (\r\n      <div className={this.props.name}>\r\n        {drawPile}\r\n        {tiebreaker}\r\n        {discardPile}\r\n        <div>\r\n        <Typography variant='h5'>{deckDescription}</Typography>\r\n        {this.props.canDraw ? <Button variant='contained' color=\"primary\" onClick={() => this.props.onClick()}>{this.props.cards.length > 0 ? 'Draw' : 'Next Round'}</Button> : null}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Objectives extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    let containerClassName = 'Objectives-Container-' + this.props.orientation;\r\n\r\n    var objCards = [];\r\n    let numObjectives = this.props.cards.length;\r\n    let keyAddtion = numObjectives * (this.props.round - 1);\r\n    for (var i = 0; i < this.props.cards.length; i++) {\r\n      objCards.push(<ObjectiveCard key={(i + 1) + keyAddtion} playerHasRedrawn={this.props.playerHasRedrawn} cardsDrawnByRival={this.props.cardsDrawnByRival} redrawHandler={this.props.onRedrawObjective} isFirst={i === 0} cardKey={i} orientation={this.props.orientation} card={this.props.cards[i] ? this.props.cards[i].front : null}/>)\r\n    }\r\n\r\n    return (\r\n      <div className={containerClassName}>\r\n        {objCards}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n \r\nconst ObjectiveStatusEnum = Object.freeze({\"Incomplete\":0, \"Rival\":1, \"Player\":2});\r\n\r\nclass ObjectiveCard extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      objectiveStatus: ObjectiveStatusEnum.Incomplete\r\n    }\r\n\r\n    this.handleRadioChange = this.handleRadioChange.bind(this);\r\n  }  \r\n  \r\n  \r\n  handleRadioChange(event) {\r\n    console.log(this.state.objectiveStatus);\r\n    let newStatus = event.target.value;\r\n    console.log(newStatus);\r\n    \r\n    this.setState(() => ({\r\n      objectiveStatus: newStatus\r\n    }));\r\n  }\r\n\r\n  render() {\r\n    console.log(this.props.cardKey);\r\n    var objectivesImageClassName = 'Objectives-' + this.props.orientation;\r\n    let baseDivClass = 'ObjectiveCardHolder-' + this.props.orientation;\r\n    let divName = this.props.isFirst ? baseDivClass + '-first' : baseDivClass;\r\n\r\n    let claimedStyle = this.state.objectiveStatus == 0 ? null : {'opacity': '0.4'};\r\n\r\n    var radioGroup = null;\r\n    \r\n    if (!this.props.playerHasRedrawn && this.props.cardsDrawnByRival === 1) {\r\n       radioGroup = <Button className='Redraw-Button' size=\"small\" variant='contained' color=\"primary\" onClick={() => this.props.redrawHandler(this.props.cardKey)}>Redraw</Button>\r\n    } else if (this.props.cardsDrawnByRival >= 1){\r\n      radioGroup = <FormControl component=\"fieldset\">\r\n        <RadioGroup value={this.state.objectiveStatus} onChange={this.handleRadioChange}>\r\n          <FormControlLabel key='1' value='1' control={<Radio color=\"primary\" size=\"small\"/>} label=\"Rival\" />\r\n          <FormControlLabel key='2' value='2' control={<Radio color=\"primary\" size=\"small\"/>} label=\"Player\"/>\r\n        </RadioGroup>\r\n      </FormControl>;\r\n    }\r\n    \r\n    return (\r\n      <div className={divName}>\r\n        <img key={this.props.cardKey} style={claimedStyle} className={objectivesImageClassName} src={this.props.card}/>\r\n        {radioGroup}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}